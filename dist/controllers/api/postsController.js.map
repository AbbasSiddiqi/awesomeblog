{"version":3,"sources":["../../../server/controllers/api/postsController.js"],"names":["postsController","store","req","res","body","title","text","userId","post","Post","_creator","save","then","newPost","status","json","success","data","catch","err","errMessage","getAll","posts","find","populate","path","select","allPosts"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,kBAAkB,EAAxB;;AAEAA,gBAAgBC,KAAhB,GAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAKhCD,IAAIE,IAL4B;AAAA,MAElCC,KAFkC,aAElCA,KAFkC;AAAA,MAGlCC,IAHkC,aAGlCA,IAHkC;AAAA,MAIlCC,MAJkC,aAIlCA,MAJkC;;;AAOpC,MAAMC,OAAO,IAAI,iBAAGC,IAAP,CAAY;AACvBJ,gBADuB;AAEvBC,cAFuB;AAGvBI,cAAUH;AAHa,GAAZ,CAAb;;AAMAC,OAAKG,IAAL,GACGC,IADH,CACS,UAACC,OAAD,EAAa;AAClBV,QAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,eAAS,IADU;AAEnBC,YAAMJ;AAFa,KAArB;AAID,GANH,EAOGK,KAPH,CAOU,UAACC,GAAD,EAAS;AACfhB,QAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBK,kBAAYD;AADO,KAArB;AAGD,GAXH;AAYD,CAzBD;;AA2BAnB,gBAAgBqB,MAAhB,GAAyB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AACrC,MAAMmB,QAAQ,EAAd;;AAEA,mBAAGb,IAAH,CAAQc,IAAR,CAAa,EAAb,EACGC,QADH,CACY;AACNC,UAAM,UADA;AAENC,YAAQ;AAFF,GADZ,EAKGF,QALH,CAKY;AACRC,UAAM;AADE,GALZ,EAQGb,IARH,CAQS,UAACe,QAAD,EAAc;AACjBxB,QAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,eAAS,IADU;AAEnBC,YAAMU;AAFa,KAArB;AAIH,GAbH,EAcGT,KAdH,CAcU,UAACC,GAAD,EAAS;AACfhB,QAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBK,kBAAYD;AADO,KAArB;AAGD,GAlBH;AAmBD,CAtBD;;kBAwBenB,e","file":"postsController.js","sourcesContent":["import db from '../models';\nconst postsController = {};\n\npostsController.store = (req, res) => {\n  let {\n    title,\n    text,\n    userId\n  } = req.body;\n\n  const post = new db.Post({\n    title,\n    text,\n    _creator: userId\n  });\n\n  post.save()\n    .then( (newPost) => {\n      res.status(200).json({\n        success: true,\n        data: newPost\n      });\n    })\n    .catch( (err) => {\n      res.status(500).json({\n        errMessage: err\n      });\n    });\n}\n\npostsController.getAll = (req, res) => {\n  const posts = [];\n\n  db.Post.find({})\n    .populate({\n        path: '_creator',\n        select: 'username -_id'\n    })\n    .populate({\n      path: '_comments',\n    })\n    .then( (allPosts) => {\n        res.status(200).json({\n          success: true,\n          data: allPosts\n        });\n    })\n    .catch( (err) => {\n      res.status(500).json({\n        errMessage: err\n      });\n    });\n}\n\nexport default postsController;\n"]}